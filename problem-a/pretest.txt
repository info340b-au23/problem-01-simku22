 FAIL  problem-a/problem.spec.js
  Used test-driven development
    × Used Jest to pre-test code, saved in `pretest.txt` (3 ms)
  Source code is valid
    √ HTML validates without errors (15 ms)
    √ CSS validates without errors (445 ms)
  Has required HTML
    √ Specifies charset (3 ms)
    √ Includes page title (2 ms)
    √ Includes author metadata (1 ms)
    √ Has a top-level heading (1 ms)
    √ Has an image (1 ms)
    √ Includes a paragraph (1 ms)
    √ Includes a hyperlink in the paragraph (1 ms)
    √ Includes a list (1 ms)
    √ List has at least 3 items (1 ms)
  Has required CSS
    √ Links in local stylesheet (1 ms)
    √ Body has default font size (1 ms)
    × Body has default font family (2 ms)
    √ Paragraphs have specified line height (1 ms)
    × Images have constrained height (1 ms)
    √ Important list item is colored (1 ms)

  ● Used test-driven development › Used Jest to pre-test code, saved in `pretest.txt`

    ENOENT: no such file or directory, open 'D:\Users\simon\Documents\GitHub\problem-01-simku22\problem-a/pretest.txt'

      17 |   test('Used Jest to pre-test code, saved in `pretest.txt`', () => {      
      18 |     const path = __dirname + '/pretest.txt'
    > 19 |     const pretest = fs.readFileSync(path, 'utf-8');
         |                        ^
      20 |     expect(pretest).toMatch(/FAIL +(problem-a)?\/problem\.spec\.js/)      
      21 |   })
      22 | })

      at Object.readFileSync (problem-a/problem.spec.js:19:24)

  ● Has required CSS › Body has default font family

    expect(received).toMatch(expected)

    Expected pattern: /'Helvetica Neue', *'?Helvetica'?, *'?Arial'?, *sans-serif/    
    Received string:  "Arial, Helvetica, sans-serif"

      131 |   test('Body has default font family', () => {
      132 |     let fontFamilySingleQuotes = ($('body').css('font-family')).replace(/"/g, '\'');
    > 133 |     expect(fontFamilySingleQuotes).toMatch(/'Helvetica Neue', *'?Helvetica'?, *'?Arial'?, *sans-serif/);
          |                                    ^
      134 |   })
      135 |
      136 |   test('Paragraphs have specified line height', () => {

      at Object.toMatch (problem-a/problem.spec.js:133:36)

  ● Has required CSS › Images have constrained height

    expect(received).toEqual(expected) // deep equality

    Expected: "400px"
    Received: undefined

      142 |
      143 |   test('Images have constrained height', () => {
    > 144 |     expect($('img').css('max-height')).toEqual('400px');
          |                                        ^
      145 |   })
      146 |
      147 |   test('Important list item is colored', () => {

      at Object.toEqual (problem-a/problem.spec.js:144:40)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 15 passed, 18 total
Snapshots:   0 total
Time:        4.249 s
Ran all test suites matching /problem-a/i.